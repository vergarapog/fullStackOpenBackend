{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","object","post","id","delete","put","Notification","message","type","console","log","className","Filter","props","value","search","onChange","onKeyUp","personList","map","person","name","number","PersonForm","onSubmit","addNote","newName","onChangeName","newNumber","onChangeNum","Persons","persons","i","deleteFunc","handleDelete","Person","onClick","App","useState","setPersons","setSearch","setNewName","setNewNumber","searchList","setList","setMessage","messType","setMessType","useEffect","personService","event","target","trim","length","newList","filter","toUpperCase","includes","preventDefault","window","confirm","idReplace","find","catch","error","setTimeout","concat","p","filtered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d8332e0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//const baseUrl = \"http://localhost:3001/api/persons\";\r\nconst baseUrl = \"api/persons\";\r\n\r\nconst getAll = () => {\r\n  const promise = axios.get(baseUrl);\r\n\r\n  return promise.then((response) => response.data);\r\n};\r\n\r\nconst create = (object) => {\r\n  return axios.post(baseUrl, object);\r\n};\r\n\r\nconst deleteFunc = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nconst editNumFunc = (id, object) => {\r\n  return axios.put(`${baseUrl}/${id}`, object);\r\n};\r\n\r\nexport default { getAll, create, deleteFunc, editNumFunc };\r\n","import React from 'react'\r\n\r\nconst Notification = ({message, type}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    console.log(type)\r\n\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst Filter = (props) => {\n\n  return (\n    <div>\n      <div>\n        Filter shown: <input value={props.search} onChange={props.onChange} onKeyUp={props.onKeyUp} />\n      </div>\n      {props.personList.map(person =>\n        <Person key={person.name} name={person.name} number={person.number} />\n      )\n      }\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addNote}>\n        <div>\n          Name: <input value={props.newName} onChange={props.onChangeName} />\n        </div>\n        <div>\n          Number: <input value={props.newNumber} onChange={props.onChangeNum} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Persons = (props) => {\n\n  \n  return (\n    <div>\n      {props.persons.map((person, i) =>\n        <Person key={i} name={person.name} number={person.number}\n        deleteFunc={() => props.handleDelete(person.id)} />\n      )\n      }\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      {props.name} {props.number}\n      <button onClick={props.deleteFunc}>Delete</button>\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n\n  ])\n  const [search, setSearch] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchList, setList] = useState([])\n  const [message, setMessage] = useState('')\n  const [messType, setMessType] = useState('')\n\n  useEffect(() => {\n    personService.getAll().then(persons =>\n      setPersons(persons)\n    )\n  }, [])\n\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    console.log(persons)\n    \n    let allNames = persons.map(person => person.name)\n\n\n    if (allNames.includes(newName)) {\n      if(window.confirm(`${newName} is already added to phonebook replace old number with a new one?`)){\n        const idReplace = (persons.find(person => person.name === newName).id)\n        const newPerson = {\n          name: newName,\n          number: newNumber\n        }\n        personService.editNumFunc(idReplace, newPerson)\n                     .then(response => {\n                      setPersons(persons.map(person => \n                        person.id === idReplace ?\n                        response.data : person\n                      ))\n                     }).catch(error => {\n                       \n                       setMessage(`Information of ${newName} has been already removed from server`)\n                       setMessType('error')\n                       setTimeout(() => {\n                        setMessage(null)\n                        setMessType(null)\n                       },4000)\n                       setPersons(persons.filter(person => person.id !== idReplace))\n                     })\n\n      }\n      return\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService.create(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setTimeout(() => {\n          setMessage(null)\n          setMessType(null)\n        },4000)\n        setMessage(`Added ${newName}`)\n        setMessType('success')\n      })\n\n  }\n\n  const handleDelete = (id) =>{\n    console.log(`${id} needs to be deleted`)\n\n    const name = persons.find(p => p.id === id).name\n\n    if(window.confirm(`delete ${name} ?`)){\n    personService.deleteFunc(id)\n                 .then(response => {\n                  let filtered = persons\n                  .filter(person => person.id !== id)\n                  setPersons(filtered)\n                 })\n            }\n  }\n\n  const handleUpdate = (id) => {\n\n  }\n\n  const HandleEmptySearch = () => {\n    if (!search.trim().length) {\n      setList([])\n    }\n  }\n\n  const HandleSearchChange = (event) => {\n    setSearch(event.target.value)\n    if (!search.trim().length) {\n      return\n    }\n\n    const newList = persons.filter(person => {\n      return person.name.trim().toUpperCase().includes(search.toUpperCase().trim())\n    }\n    )\n\n    setList(newList)\n  }\n\n  const HandleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const HandleNumChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messType}/>\n      <Filter search={search} onChange={HandleSearchChange} onKeyUp={HandleEmptySearch} personList={searchList} />\n      <h2>Add New Person</h2>\n      <PersonForm addNote={addNote} newName={newName} onChangeName={HandleNameChange} newNumber={newNumber} onChangeNum={HandleNumChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}